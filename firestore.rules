rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check for admin role
    function isAdmin() {
      // Check if the user is authenticated and has an admin role document
      // The user's UID must match the document ID in the 'users' collection
      return request.auth != null && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Ruletas: Public read, admin write
    match /ruletas/{raffleId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Retiros: Public read, admin create
    match /retiros/{withdrawalId} {
      allow read: if true;
      allow create: if isAdmin();
      allow update, delete: if false; // Disallow updates/deletes from client
    }

    // Funds: Public read, admin write
    match /funds/summary {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Users: only readable by other admins to check roles if needed, not writable from client
    match /users/{userId} {
      allow read: if isAdmin();
      allow write: if false; // Manage roles from Firebase Console or a secure backend
    }
  }
}
