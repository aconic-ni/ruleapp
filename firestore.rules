
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if the currently authenticated user has an 'admin' role.
    // This is the core of our security model.
    function isAdmin() {
      return request.auth != null &&
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // The 'ruletas' collection contains all raffle data.
    // It needs to be publicly readable for the home page.
    // All writes (create, update) are handled by server actions, which must be
    // initiated by an admin.
    match /ruletas/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // The 'retiros' collection contains all withdrawal history.
    // It needs to be publicly readable for the withdrawals page.
    // Writes are handled by server actions initiated by an admin.
    match /retiros/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // The 'funds/summary' document holds the financial totals.
    // It needs to be publicly readable for the funds page and home page.
    // Writes (incrementing totals) are handled by server actions initiated by an admin.
    match /funds/summary {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // The 'users' collection stores user roles.
    // To maintain security, only admins should be able to see or change roles.
    match /users/{userId} {
      allow read, write: if isAdmin();
    }

    // BEST PRACTICE: Default deny.
    // This rule ensures that any collection not explicitly matched above is inaccessible.
    // This prevents accidental exposure of new collections.
    match /{path=**} {
      allow read, write: if false;
    }
  }
}
